<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>utopia3: trunk/lib/components/symfony/Console/Input/InputDefinition.php Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">utopia3</div>
   <div id="projectbrief">utopia framework - version3</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('_input_definition_8php.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>trunk/lib/components/symfony/Console/Input/InputDefinition.php</h1>  </div>
</div>
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 &lt;?php
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 <span class="keyword">namespace </span>Symfony\Components\Console\Input;
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="comment">/*</span>
<a name="l00006"></a>00006 <span class="comment"> * This file is part of the Symfony framework.</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> * (c) Fabien Potencier &lt;fabien.potencier@symfony-project.com&gt;</span>
<a name="l00009"></a>00009 <span class="comment"> *</span>
<a name="l00010"></a>00010 <span class="comment"> * This source file is subject to the MIT license that is bundled</span>
<a name="l00011"></a>00011 <span class="comment"> * with this source code in the file LICENSE.</span>
<a name="l00012"></a>00012 <span class="comment"> */</span>
<a name="l00013"></a>00013 
<a name="l00028"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html">00028</a> <span class="keyword">class </span><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html">InputDefinition</a>
<a name="l00029"></a>00029 {
<a name="l00030"></a>00030     <span class="keyword">protected</span> $arguments;
<a name="l00031"></a>00031     <span class="keyword">protected</span> $requiredCount;
<a name="l00032"></a>00032     <span class="keyword">protected</span> $hasAnArrayArgument = <span class="keyword">false</span>;
<a name="l00033"></a>00033     <span class="keyword">protected</span> $hasOptional;
<a name="l00034"></a>00034     <span class="keyword">protected</span> $options;
<a name="l00035"></a>00035     <span class="keyword">protected</span> $shortcuts;
<a name="l00036"></a>00036 
<a name="l00042"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a1f5d7f988af12054ec381c3ba4ef6e9d">00042</a>     <span class="keyword">public</span> function __construct(array $definition = array())
<a name="l00043"></a>00043     {
<a name="l00044"></a>00044         $this-&gt;setDefinition($definition);
<a name="l00045"></a>00045     }
<a name="l00046"></a>00046 
<a name="l00047"></a>00047     <span class="keyword">public</span> function setDefinition(array $definition)
<a name="l00048"></a>00048     {
<a name="l00049"></a>00049         $arguments = array();
<a name="l00050"></a>00050         $options = array();
<a name="l00051"></a>00051         <span class="keywordflow">foreach</span> ($definition as $item) {
<a name="l00052"></a>00052             <span class="keywordflow">if</span> ($item instanceof <a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html">InputOption</a>) {
<a name="l00053"></a>00053                 $options[] = $item;
<a name="l00054"></a>00054             } <span class="keywordflow">else</span> {
<a name="l00055"></a>00055                 $arguments[] = $item;
<a name="l00056"></a>00056             }
<a name="l00057"></a>00057         }
<a name="l00058"></a>00058 
<a name="l00059"></a>00059         $this-&gt;setArguments($arguments);
<a name="l00060"></a>00060         $this-&gt;setOptions($options);
<a name="l00061"></a>00061     }
<a name="l00062"></a>00062 
<a name="l00068"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a57ea548c63b56c06a015322631e710ab">00068</a>     <span class="keyword">public</span> function setArguments($arguments = array())
<a name="l00069"></a>00069     {
<a name="l00070"></a>00070         $this-&gt;arguments     = array();
<a name="l00071"></a>00071         $this-&gt;requiredCount = 0;
<a name="l00072"></a>00072         $this-&gt;hasOptional   = <span class="keyword">false</span>;
<a name="l00073"></a>00073         $this-&gt;addArguments($arguments);
<a name="l00074"></a>00074     }
<a name="l00075"></a>00075 
<a name="l00081"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a3a428e290ebfb548a82919c5763b435a">00081</a>     <span class="keyword">public</span> function addArguments($arguments = array())
<a name="l00082"></a>00082     {
<a name="l00083"></a>00083         <span class="keywordflow">if</span> (null !== $arguments) {
<a name="l00084"></a>00084             <span class="keywordflow">foreach</span> ($arguments as $argument) {
<a name="l00085"></a>00085                 $this-&gt;addArgument($argument);
<a name="l00086"></a>00086             }
<a name="l00087"></a>00087         }
<a name="l00088"></a>00088     }
<a name="l00089"></a>00089 
<a name="l00097"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a5b212a2dfc596cfff0e6aa3703f33de8">00097</a>     <span class="keyword">public</span> function addArgument(<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_argument.html">InputArgument</a> $argument)
<a name="l00098"></a>00098     {
<a name="l00099"></a>00099         <span class="keywordflow">if</span> (isset($this-&gt;arguments[$argument-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_argument.html#a3d0963e68bb313b163a73f2803c64600">getName</a>()])) {
<a name="l00100"></a>00100             <span class="keywordflow">throw</span> <span class="keyword">new</span> \LogicException(sprintf(<span class="stringliteral">&#39;An argument with name &quot;%s&quot; already exist.&#39;</span>, $argument-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_argument.html#a3d0963e68bb313b163a73f2803c64600">getName</a>()));
<a name="l00101"></a>00101         }
<a name="l00102"></a>00102 
<a name="l00103"></a>00103         <span class="keywordflow">if</span> ($this-&gt;hasAnArrayArgument) {
<a name="l00104"></a>00104             <span class="keywordflow">throw</span> <span class="keyword">new</span> \LogicException(<span class="stringliteral">&#39;Cannot add an argument after an array argument.&#39;</span>);
<a name="l00105"></a>00105         }
<a name="l00106"></a>00106 
<a name="l00107"></a>00107         <span class="keywordflow">if</span> ($argument-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_argument.html#ac26faa299b04174755ce0cca5f774585">isRequired</a>() &amp;&amp; $this-&gt;hasOptional) {
<a name="l00108"></a>00108             <span class="keywordflow">throw</span> <span class="keyword">new</span> \LogicException(<span class="stringliteral">&#39;Cannot add a required argument after an optional one.&#39;</span>);
<a name="l00109"></a>00109         }
<a name="l00110"></a>00110 
<a name="l00111"></a>00111         <span class="keywordflow">if</span> ($argument-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_argument.html#a2f0ab131ec6fa3f6f91721eb72ca10f0">isArray</a>()) {
<a name="l00112"></a>00112             $this-&gt;hasAnArrayArgument = <span class="keyword">true</span>;
<a name="l00113"></a>00113         }
<a name="l00114"></a>00114 
<a name="l00115"></a>00115         <span class="keywordflow">if</span> ($argument-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_argument.html#ac26faa299b04174755ce0cca5f774585">isRequired</a>()) {
<a name="l00116"></a>00116             ++$this-&gt;requiredCount;
<a name="l00117"></a>00117         } <span class="keywordflow">else</span> {
<a name="l00118"></a>00118             $this-&gt;hasOptional = <span class="keyword">true</span>;
<a name="l00119"></a>00119         }
<a name="l00120"></a>00120 
<a name="l00121"></a>00121         $this-&gt;arguments[$argument-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_argument.html#a3d0963e68bb313b163a73f2803c64600">getName</a>()] = $argument;
<a name="l00122"></a>00122     }
<a name="l00123"></a>00123 
<a name="l00133"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#aa2048ce7fc84dc4f18393a0b0cc6d311">00133</a>     <span class="keyword">public</span> function getArgument($name)
<a name="l00134"></a>00134     {
<a name="l00135"></a>00135         $arguments = is_int($name) ? array_values($this-&gt;arguments) : $this-&gt;arguments;
<a name="l00136"></a>00136 
<a name="l00137"></a>00137         <span class="keywordflow">if</span> (!$this-&gt;hasArgument($name)) {
<a name="l00138"></a>00138             <span class="keywordflow">throw</span> <span class="keyword">new</span> \InvalidArgumentException(sprintf(<span class="stringliteral">&#39;The &quot;%s&quot; argument does not exist.&#39;</span>, $name));
<a name="l00139"></a>00139         }
<a name="l00140"></a>00140 
<a name="l00141"></a>00141         <span class="keywordflow">return</span> $arguments[$name];
<a name="l00142"></a>00142     }
<a name="l00143"></a>00143 
<a name="l00151"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a1739ff4835ce8b49da97341e16a8b4cc">00151</a>     <span class="keyword">public</span> function hasArgument($name)
<a name="l00152"></a>00152     {
<a name="l00153"></a>00153         $arguments = is_int($name) ? array_values($this-&gt;arguments) : $this-&gt;arguments;
<a name="l00154"></a>00154 
<a name="l00155"></a>00155         <span class="keywordflow">return</span> isset($arguments[$name]);
<a name="l00156"></a>00156     }
<a name="l00157"></a>00157 
<a name="l00163"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a1d4c324c5a088be98d99d3efbf3502e1">00163</a>     <span class="keyword">public</span> function getArguments()
<a name="l00164"></a>00164     {
<a name="l00165"></a>00165         <span class="keywordflow">return</span> $this-&gt;arguments;
<a name="l00166"></a>00166     }
<a name="l00167"></a>00167 
<a name="l00173"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a665eba0fe81a64b481fe5003dccb49dd">00173</a>     <span class="keyword">public</span> function getArgumentCount()
<a name="l00174"></a>00174     {
<a name="l00175"></a>00175         <span class="keywordflow">return</span> $this-&gt;hasAnArrayArgument ? PHP_INT_MAX : count($this-&gt;arguments);
<a name="l00176"></a>00176     }
<a name="l00177"></a>00177 
<a name="l00183"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a7ed40174c897c0b8f3c46424a15deb8f">00183</a>     <span class="keyword">public</span> function getArgumentRequiredCount()
<a name="l00184"></a>00184     {
<a name="l00185"></a>00185         <span class="keywordflow">return</span> $this-&gt;requiredCount;
<a name="l00186"></a>00186     }
<a name="l00187"></a>00187 
<a name="l00193"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#ac79f082f04d1a56559f58a494829d8db">00193</a>     <span class="keyword">public</span> function getArgumentDefaults()
<a name="l00194"></a>00194     {
<a name="l00195"></a>00195         $values = array();
<a name="l00196"></a>00196         <span class="keywordflow">foreach</span> ($this-&gt;arguments as $argument) {
<a name="l00197"></a>00197             $values[$argument-&gt;getName()] = $argument-&gt;getDefault();
<a name="l00198"></a>00198         }
<a name="l00199"></a>00199 
<a name="l00200"></a>00200         <span class="keywordflow">return</span> $values;
<a name="l00201"></a>00201     }
<a name="l00202"></a>00202 
<a name="l00208"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#ace0e854c0e0609fa29333dbd447eb2da">00208</a>     <span class="keyword">public</span> function setOptions($options = array())
<a name="l00209"></a>00209     {
<a name="l00210"></a>00210         $this-&gt;options = array();
<a name="l00211"></a>00211         $this-&gt;shortcuts = array();
<a name="l00212"></a>00212         $this-&gt;addOptions($options);
<a name="l00213"></a>00213     }
<a name="l00214"></a>00214 
<a name="l00220"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a81e3f5a80b8819b6b35f788ea02c1be5">00220</a>     <span class="keyword">public</span> function addOptions($options = array())
<a name="l00221"></a>00221     {
<a name="l00222"></a>00222         <span class="keywordflow">foreach</span> ($options as $option) {
<a name="l00223"></a>00223             $this-&gt;addOption($option);
<a name="l00224"></a>00224         }
<a name="l00225"></a>00225     }
<a name="l00226"></a>00226 
<a name="l00234"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a1f847cb9f2be3de4d23c5f008bb91818">00234</a>     <span class="keyword">public</span> function addOption(<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html">InputOption</a> $option)
<a name="l00235"></a>00235     {
<a name="l00236"></a>00236         <span class="keywordflow">if</span> (isset($this-&gt;options[$option-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html#a3d0963e68bb313b163a73f2803c64600">getName</a>()])) {
<a name="l00237"></a>00237             <span class="keywordflow">throw</span> <span class="keyword">new</span> \LogicException(sprintf(<span class="stringliteral">&#39;An option named &quot;%s&quot; already exist.&#39;</span>, $option-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html#a3d0963e68bb313b163a73f2803c64600">getName</a>()));
<a name="l00238"></a>00238         } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (isset($this-&gt;shortcuts[$option-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html#a1bdfaff62e3e5f5962c0d01865cae614">getShortcut</a>()])) {
<a name="l00239"></a>00239             <span class="keywordflow">throw</span> <span class="keyword">new</span> \LogicException(sprintf(<span class="stringliteral">&#39;An option with shortcut &quot;%s&quot; already exist.&#39;</span>, $option-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html#a1bdfaff62e3e5f5962c0d01865cae614">getShortcut</a>()));
<a name="l00240"></a>00240         }
<a name="l00241"></a>00241 
<a name="l00242"></a>00242         $this-&gt;options[$option-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html#a3d0963e68bb313b163a73f2803c64600">getName</a>()] = $option;
<a name="l00243"></a>00243         <span class="keywordflow">if</span> ($option-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html#a1bdfaff62e3e5f5962c0d01865cae614">getShortcut</a>()) {
<a name="l00244"></a>00244             $this-&gt;shortcuts[$option-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html#a1bdfaff62e3e5f5962c0d01865cae614">getShortcut</a>()] = $option-&gt;<a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html#a3d0963e68bb313b163a73f2803c64600">getName</a>();
<a name="l00245"></a>00245         }
<a name="l00246"></a>00246     }
<a name="l00247"></a>00247 
<a name="l00255"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a86acce3c002ca1af709fd1b04f2f82fa">00255</a>     <span class="keyword">public</span> function getOption($name)
<a name="l00256"></a>00256     {
<a name="l00257"></a>00257         <span class="keywordflow">if</span> (!$this-&gt;hasOption($name)) {
<a name="l00258"></a>00258             <span class="keywordflow">throw</span> <span class="keyword">new</span> \InvalidArgumentException(sprintf(<span class="stringliteral">&#39;The &quot;--%s&quot; option does not exist.&#39;</span>, $name));
<a name="l00259"></a>00259         }
<a name="l00260"></a>00260 
<a name="l00261"></a>00261         <span class="keywordflow">return</span> $this-&gt;options[$name];
<a name="l00262"></a>00262     }
<a name="l00263"></a>00263 
<a name="l00271"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a93cc4c82c649f5685d81ed5c3327e913">00271</a>     <span class="keyword">public</span> function hasOption($name)
<a name="l00272"></a>00272     {
<a name="l00273"></a>00273         <span class="keywordflow">return</span> isset($this-&gt;options[$name]);
<a name="l00274"></a>00274     }
<a name="l00275"></a>00275 
<a name="l00281"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a1a49b8dded6e91a52e2fd07195d334da">00281</a>     <span class="keyword">public</span> function getOptions()
<a name="l00282"></a>00282     {
<a name="l00283"></a>00283         <span class="keywordflow">return</span> $this-&gt;options;
<a name="l00284"></a>00284     }
<a name="l00285"></a>00285 
<a name="l00293"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#ad6780823501a43a750f8e214ca665099">00293</a>     <span class="keyword">public</span> function hasShortcut($name)
<a name="l00294"></a>00294     {
<a name="l00295"></a>00295         <span class="keywordflow">return</span> isset($this-&gt;shortcuts[$name]);
<a name="l00296"></a>00296     }
<a name="l00297"></a>00297 
<a name="l00303"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a68bb4248284cbb7175efb41aafcd526f">00303</a>     <span class="keyword">public</span> function getOptionForShortcut($shortcut)
<a name="l00304"></a>00304     {
<a name="l00305"></a>00305         <span class="keywordflow">return</span> $this-&gt;getOption($this-&gt;shortcutToName($shortcut));
<a name="l00306"></a>00306     }
<a name="l00307"></a>00307 
<a name="l00313"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a92251ef63ec368d02173b72a8acff147">00313</a>     <span class="keyword">public</span> function getOptionDefaults()
<a name="l00314"></a>00314     {
<a name="l00315"></a>00315         $values = array();
<a name="l00316"></a>00316         <span class="keywordflow">foreach</span> ($this-&gt;options as $option) {
<a name="l00317"></a>00317             $values[$option-&gt;getName()] = $option-&gt;getDefault();
<a name="l00318"></a>00318         }
<a name="l00319"></a>00319 
<a name="l00320"></a>00320         <span class="keywordflow">return</span> $values;
<a name="l00321"></a>00321     }
<a name="l00322"></a>00322 
<a name="l00332"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#ada8bb4384a8d29eeecfdfcb300cc7253">00332</a>     <span class="keyword">protected</span> function shortcutToName($shortcut)
<a name="l00333"></a>00333     {
<a name="l00334"></a>00334         <span class="keywordflow">if</span> (!isset($this-&gt;shortcuts[$shortcut])) {
<a name="l00335"></a>00335             <span class="keywordflow">throw</span> <span class="keyword">new</span> \InvalidArgumentException(sprintf(<span class="stringliteral">&#39;The &quot;-%s&quot; option does not exist.&#39;</span>, $shortcut));
<a name="l00336"></a>00336         }
<a name="l00337"></a>00337 
<a name="l00338"></a>00338         <span class="keywordflow">return</span> $this-&gt;shortcuts[$shortcut];
<a name="l00339"></a>00339     }
<a name="l00340"></a>00340 
<a name="l00346"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a689e3214627e1e86671c39f506bb5ff5">00346</a>     <span class="keyword">public</span> function getSynopsis()
<a name="l00347"></a>00347     {
<a name="l00348"></a>00348         $elements = array();
<a name="l00349"></a>00349         <span class="keywordflow">foreach</span> ($this-&gt;getOptions() as $option) {
<a name="l00350"></a>00350             $shortcut = $option-&gt;getShortcut() ? sprintf(<span class="stringliteral">&#39;-%s|&#39;</span>, $option-&gt;getShortcut()) : <span class="stringliteral">&#39;&#39;</span>;
<a name="l00351"></a>00351             $elements[] = sprintf(<span class="charliteral">&#39;[&#39;</span>.($option-&gt;isParameterRequired() ? <span class="stringliteral">&#39;%s--%s=&quot;...&quot;&#39;</span> : ($option-&gt;isParameterOptional() ? <span class="stringliteral">&#39;%s--%s[=&quot;...&quot;]&#39;</span> : <span class="stringliteral">&#39;%s--%s&#39;</span>)).<span class="charliteral">&#39;]&#39;</span>, $shortcut, $option-&gt;getName());
<a name="l00352"></a>00352         }
<a name="l00353"></a>00353 
<a name="l00354"></a>00354         <span class="keywordflow">foreach</span> ($this-&gt;getArguments() as $argument) {
<a name="l00355"></a>00355             $elements[] = sprintf($argument-&gt;isRequired() ? <span class="stringliteral">&#39;%s&#39;</span> : <span class="stringliteral">&#39;[%s]&#39;</span>, $argument-&gt;getName().($argument-&gt;isArray() ? <span class="charliteral">&#39;1&#39;</span> : <span class="stringliteral">&#39;&#39;</span>));
<a name="l00356"></a>00356 
<a name="l00357"></a>00357             <span class="keywordflow">if</span> ($argument-&gt;isArray()) {
<a name="l00358"></a>00358                 $elements[] = sprintf(<span class="stringliteral">&#39;... [%sN]&#39;</span>, $argument-&gt;getName());
<a name="l00359"></a>00359             }
<a name="l00360"></a>00360         }
<a name="l00361"></a>00361 
<a name="l00362"></a>00362         <span class="keywordflow">return</span> implode(<span class="charliteral">&#39; &#39;</span>, $elements);
<a name="l00363"></a>00363     }
<a name="l00364"></a>00364 
<a name="l00370"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a84818e2c0f3af87f9b3c7a0818fe0425">00370</a>     <span class="keyword">public</span> function asText()
<a name="l00371"></a>00371     {
<a name="l00372"></a>00372         <span class="comment">// find the largest option or argument name</span>
<a name="l00373"></a>00373         $max = 0;
<a name="l00374"></a>00374         <span class="keywordflow">foreach</span> ($this-&gt;getOptions() as $option) {
<a name="l00375"></a>00375             $max = strlen($option-&gt;getName()) + 2 &gt; $max ? strlen($option-&gt;getName()) + 2 : $max;
<a name="l00376"></a>00376         }
<a name="l00377"></a>00377         <span class="keywordflow">foreach</span> ($this-&gt;getArguments() as $argument) {
<a name="l00378"></a>00378             $max = strlen($argument-&gt;getName()) &gt; $max ? strlen($argument-&gt;getName()) : $max;
<a name="l00379"></a>00379         }
<a name="l00380"></a>00380         ++$max;
<a name="l00381"></a>00381 
<a name="l00382"></a>00382         $text = array();
<a name="l00383"></a>00383 
<a name="l00384"></a>00384         <span class="keywordflow">if</span> ($this-&gt;getArguments()) {
<a name="l00385"></a>00385             $text[] = <span class="stringliteral">&#39;&lt;comment&gt;Arguments:&lt;/comment&gt;&#39;</span>;
<a name="l00386"></a>00386             <span class="keywordflow">foreach</span> ($this-&gt;getArguments() as $argument) {
<a name="l00387"></a>00387                 <span class="keywordflow">if</span> (null !== $argument-&gt;getDefault() &amp;&amp; (!is_array($argument-&gt;getDefault()) || count($argument-&gt;getDefault()))) {
<a name="l00388"></a>00388                     $default = sprintf(<span class="stringliteral">&#39;&lt;comment&gt; (default: %s)&lt;/comment&gt;&#39;</span>, is_array($argument-&gt;getDefault()) ? str_replace(<span class="stringliteral">&quot;\n&quot;</span>, <span class="stringliteral">&#39;&#39;</span>, var_export($argument-&gt;getDefault(), <span class="keyword">true</span>)): $argument-&gt;getDefault());
<a name="l00389"></a>00389                 } <span class="keywordflow">else</span> {
<a name="l00390"></a>00390                     $default = <span class="stringliteral">&#39;&#39;</span>;
<a name="l00391"></a>00391                 }
<a name="l00392"></a>00392 
<a name="l00393"></a>00393                 $text[] = sprintf(<span class="stringliteral">&quot; &lt;info&gt;%-${max}s&lt;/info&gt; %s%s&quot;</span>, $argument-&gt;getName(), $argument-&gt;getDescription(), $default);
<a name="l00394"></a>00394             }
<a name="l00395"></a>00395 
<a name="l00396"></a>00396             $text[] = <span class="stringliteral">&#39;&#39;</span>;
<a name="l00397"></a>00397         }
<a name="l00398"></a>00398 
<a name="l00399"></a>00399         <span class="keywordflow">if</span> ($this-&gt;getOptions()) {
<a name="l00400"></a>00400             $text[] = <span class="stringliteral">&#39;&lt;comment&gt;Options:&lt;/comment&gt;&#39;</span>;
<a name="l00401"></a>00401 
<a name="l00402"></a>00402             <span class="keywordflow">foreach</span> ($this-&gt;getOptions() as $option) {
<a name="l00403"></a>00403                 <span class="keywordflow">if</span> ($option-&gt;acceptParameter() &amp;&amp; null !== $option-&gt;getDefault() &amp;&amp; (!is_array($option-&gt;getDefault()) || count($option-&gt;getDefault()))) {
<a name="l00404"></a>00404                     $default = sprintf(<span class="stringliteral">&#39;&lt;comment&gt; (default: %s)&lt;/comment&gt;&#39;</span>, is_array($option-&gt;getDefault()) ? str_replace(<span class="stringliteral">&quot;\n&quot;</span>, <span class="stringliteral">&#39;&#39;</span>, print_r($option-&gt;getDefault(), <span class="keyword">true</span>)): $option-&gt;getDefault());
<a name="l00405"></a>00405                 } <span class="keywordflow">else</span> {
<a name="l00406"></a>00406                     $default = <span class="stringliteral">&#39;&#39;</span>;
<a name="l00407"></a>00407                 }
<a name="l00408"></a>00408 
<a name="l00409"></a>00409                 $multiple = $option-&gt;isArray() ? <span class="stringliteral">&#39;&lt;comment&gt; (multiple values allowed)&lt;/comment&gt;&#39;</span> : <span class="stringliteral">&#39;&#39;</span>;
<a name="l00410"></a>00410                 $text[] = sprintf(<span class="stringliteral">&#39; %-&#39;</span>.$max.<span class="stringliteral">&#39;s %s%s%s%s&#39;</span>, <span class="stringliteral">&#39;&lt;info&gt;--&#39;</span>.$option-&gt;getName().<span class="stringliteral">&#39;&lt;/info&gt;&#39;</span>, $option-&gt;getShortcut() ? sprintf(<span class="stringliteral">&#39;(-%s) &#39;</span>, $option-&gt;getShortcut()) : <span class="stringliteral">&#39;&#39;</span>, $option-&gt;getDescription(), $default, $multiple);
<a name="l00411"></a>00411             }
<a name="l00412"></a>00412 
<a name="l00413"></a>00413             $text[] = <span class="stringliteral">&#39;&#39;</span>;
<a name="l00414"></a>00414         }
<a name="l00415"></a>00415 
<a name="l00416"></a>00416         <span class="keywordflow">return</span> implode(<span class="stringliteral">&quot;\n&quot;</span>, $text);
<a name="l00417"></a>00417     }
<a name="l00418"></a>00418 
<a name="l00426"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html#a5d92e59f543d48ffc4bb7a0bff21dd05">00426</a>     <span class="keyword">public</span> function asXml($asDom = <span class="keyword">false</span>)
<a name="l00427"></a>00427     {
<a name="l00428"></a>00428         $dom = <span class="keyword">new</span> \DOMDocument(<span class="stringliteral">&#39;1.0&#39;</span>, <span class="stringliteral">&#39;UTF-8&#39;</span>);
<a name="l00429"></a>00429         $dom-&gt;formatOutput = <span class="keyword">true</span>;
<a name="l00430"></a>00430         $dom-&gt;appendChild($definitionXML = $dom-&gt;createElement(<span class="stringliteral">&#39;definition&#39;</span>));
<a name="l00431"></a>00431 
<a name="l00432"></a>00432         $definitionXML-&gt;appendChild($argumentsXML = $dom-&gt;createElement(<span class="stringliteral">&#39;arguments&#39;</span>));
<a name="l00433"></a>00433         <span class="keywordflow">foreach</span> ($this-&gt;getArguments() as $argument) {
<a name="l00434"></a>00434             $argumentsXML-&gt;appendChild($argumentXML = $dom-&gt;createElement(<span class="stringliteral">&#39;argument&#39;</span>));
<a name="l00435"></a>00435             $argumentXML-&gt;setAttribute(<span class="stringliteral">&#39;name&#39;</span>, $argument-&gt;getName());
<a name="l00436"></a>00436             $argumentXML-&gt;setAttribute(<span class="stringliteral">&#39;is_required&#39;</span>, $argument-&gt;isRequired() ? 1 : 0);
<a name="l00437"></a>00437             $argumentXML-&gt;setAttribute(<span class="stringliteral">&#39;is_array&#39;</span>, $argument-&gt;isArray() ? 1 : 0);
<a name="l00438"></a>00438             $argumentXML-&gt;appendChild($descriptionXML = $dom-&gt;createElement(<span class="stringliteral">&#39;description&#39;</span>));
<a name="l00439"></a>00439             $descriptionXML-&gt;appendChild($dom-&gt;createTextNode($argument-&gt;getDescription()));
<a name="l00440"></a>00440 
<a name="l00441"></a>00441             $argumentXML-&gt;appendChild($defaultsXML = $dom-&gt;createElement(<span class="stringliteral">&#39;defaults&#39;</span>));
<a name="l00442"></a>00442             $defaults = is_array($argument-&gt;getDefault()) ? $argument-&gt;getDefault() : ($argument-&gt;getDefault() ? array($argument-&gt;getDefault()) : array());
<a name="l00443"></a>00443             <span class="keywordflow">foreach</span> ($defaults as $default) {
<a name="l00444"></a>00444                 $defaultsXML-&gt;appendChild($defaultXML = $dom-&gt;createElement(<span class="stringliteral">&#39;default&#39;</span>));
<a name="l00445"></a>00445                 $defaultXML-&gt;appendChild($dom-&gt;createTextNode($default));
<a name="l00446"></a>00446             }
<a name="l00447"></a>00447         }
<a name="l00448"></a>00448 
<a name="l00449"></a>00449         $definitionXML-&gt;appendChild($optionsXML = $dom-&gt;createElement(<span class="stringliteral">&#39;options&#39;</span>));
<a name="l00450"></a>00450         <span class="keywordflow">foreach</span> ($this-&gt;getOptions() as $option) {
<a name="l00451"></a>00451             $optionsXML-&gt;appendChild($optionXML = $dom-&gt;createElement(<span class="stringliteral">&#39;option&#39;</span>));
<a name="l00452"></a>00452             $optionXML-&gt;setAttribute(<span class="stringliteral">&#39;name&#39;</span>, <span class="stringliteral">&#39;--&#39;</span>.$option-&gt;getName());
<a name="l00453"></a>00453             $optionXML-&gt;setAttribute(<span class="stringliteral">&#39;shortcut&#39;</span>, $option-&gt;getShortcut() ? <span class="charliteral">&#39;-&#39;</span>.$option-&gt;getShortcut() : <span class="stringliteral">&#39;&#39;</span>);
<a name="l00454"></a>00454             $optionXML-&gt;setAttribute(<span class="stringliteral">&#39;accept_parameter&#39;</span>, $option-&gt;acceptParameter() ? 1 : 0);
<a name="l00455"></a>00455             $optionXML-&gt;setAttribute(<span class="stringliteral">&#39;is_parameter_required&#39;</span>, $option-&gt;isParameterRequired() ? 1 : 0);
<a name="l00456"></a>00456             $optionXML-&gt;setAttribute(<span class="stringliteral">&#39;is_multiple&#39;</span>, $option-&gt;isArray() ? 1 : 0);
<a name="l00457"></a>00457             $optionXML-&gt;appendChild($descriptionXML = $dom-&gt;createElement(<span class="stringliteral">&#39;description&#39;</span>));
<a name="l00458"></a>00458             $descriptionXML-&gt;appendChild($dom-&gt;createTextNode($option-&gt;getDescription()));
<a name="l00459"></a>00459 
<a name="l00460"></a>00460             <span class="keywordflow">if</span> ($option-&gt;acceptParameter()) {
<a name="l00461"></a>00461                 $optionXML-&gt;appendChild($defaultsXML = $dom-&gt;createElement(<span class="stringliteral">&#39;defaults&#39;</span>));
<a name="l00462"></a>00462                 $defaults = is_array($option-&gt;getDefault()) ? $option-&gt;getDefault() : ($option-&gt;getDefault() ? array($option-&gt;getDefault()) : array());
<a name="l00463"></a>00463                 <span class="keywordflow">foreach</span> ($defaults as $default) {
<a name="l00464"></a>00464                     $defaultsXML-&gt;appendChild($defaultXML = $dom-&gt;createElement(<span class="stringliteral">&#39;default&#39;</span>));
<a name="l00465"></a>00465                     $defaultXML-&gt;appendChild($dom-&gt;createTextNode($default));
<a name="l00466"></a>00466                 }
<a name="l00467"></a>00467             }
<a name="l00468"></a>00468         }
<a name="l00469"></a>00469 
<a name="l00470"></a>00470         <span class="keywordflow">return</span> $asDom ? $dom : $dom-&gt;saveXml();
<a name="l00471"></a>00471     }
<a name="l00472"></a>00472 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>InputDefinition.php</b>      </li>
      <li class="footer">Generated on Fri Mar 4 2011 23:20:13 for utopia3 by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </li>
    </ul>
  </div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>


</body>
</html>
