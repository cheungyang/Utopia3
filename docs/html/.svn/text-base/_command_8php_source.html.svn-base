<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>utopia3: trunk/lib/components/symfony/Console/Command/Command.php Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">utopia3</div>
   <div id="projectbrief">utopia framework - version3</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('_command_8php.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>trunk/lib/components/symfony/Console/Command/Command.php</h1>  </div>
</div>
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 &lt;?php
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 <span class="keyword">namespace </span>Symfony\Components\Console\Command;
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 use Symfony\Components\Console\Input\InputDefinition;
<a name="l00006"></a>00006 use Symfony\Components\Console\Input\InputOption;
<a name="l00007"></a>00007 use Symfony\Components\Console\Input\InputArgument;
<a name="l00008"></a>00008 use Symfony\Components\Console\Input\InputInterface;
<a name="l00009"></a>00009 use Symfony\Components\Console\Output\OutputInterface;
<a name="l00010"></a>00010 use Symfony\Components\Console\Application;
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="comment">/*</span>
<a name="l00013"></a>00013 <span class="comment"> * This file is part of the Symfony framework.</span>
<a name="l00014"></a>00014 <span class="comment"> *</span>
<a name="l00015"></a>00015 <span class="comment"> * (c) Fabien Potencier &lt;fabien.potencier@symfony-project.com&gt;</span>
<a name="l00016"></a>00016 <span class="comment"> *</span>
<a name="l00017"></a>00017 <span class="comment"> * This source file is subject to the MIT license that is bundled</span>
<a name="l00018"></a>00018 <span class="comment"> * with this source code in the file LICENSE.</span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 
<a name="l00028"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html">00028</a> <span class="keyword">class </span><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html">Command</a>
<a name="l00029"></a>00029 {
<a name="l00030"></a>00030     <span class="keyword">protected</span> $name;
<a name="l00031"></a>00031     <span class="keyword">protected</span> $namespace;
<a name="l00032"></a>00032     <span class="keyword">protected</span> $aliases;
<a name="l00033"></a>00033     <span class="keyword">protected</span> $definition;
<a name="l00034"></a>00034     <span class="keyword">protected</span> $help;
<a name="l00035"></a>00035     <span class="keyword">protected</span> $application;
<a name="l00036"></a>00036     <span class="keyword">protected</span> $description;
<a name="l00037"></a>00037     <span class="keyword">protected</span> $ignoreValidationErrors;
<a name="l00038"></a>00038     <span class="keyword">protected</span> $applicationDefinitionMerged;
<a name="l00039"></a>00039     <span class="keyword">protected</span> $code;
<a name="l00040"></a>00040 
<a name="l00048"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#aa7843dae8184afc5ab27814533e12ba8">00048</a>     <span class="keyword">public</span> function __construct($name = null)
<a name="l00049"></a>00049     {
<a name="l00050"></a>00050         $this-&gt;definition = <span class="keyword">new</span> <a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html">InputDefinition</a>();
<a name="l00051"></a>00051         $this-&gt;ignoreValidationErrors = <span class="keyword">false</span>;
<a name="l00052"></a>00052         $this-&gt;applicationDefinitionMerged = <span class="keyword">false</span>;
<a name="l00053"></a>00053         $this-&gt;aliases = array();
<a name="l00054"></a>00054 
<a name="l00055"></a>00055         <span class="keywordflow">if</span> (null !== $name) {
<a name="l00056"></a>00056             $this-&gt;setName($name);
<a name="l00057"></a>00057         }
<a name="l00058"></a>00058 
<a name="l00059"></a>00059         $this-&gt;configure();
<a name="l00060"></a>00060 
<a name="l00061"></a>00061         <span class="keywordflow">if</span> (!$this-&gt;name) {
<a name="l00062"></a>00062             <span class="keywordflow">throw</span> <span class="keyword">new</span> \LogicException(<span class="stringliteral">&#39;The command name cannot be empty.&#39;</span>);
<a name="l00063"></a>00063         }
<a name="l00064"></a>00064     }
<a name="l00065"></a>00065 
<a name="l00071"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#ac08817b122da6241cfda88dab20d1580">00071</a>     <span class="keyword">public</span> function setApplication(Application $application = null)
<a name="l00072"></a>00072     {
<a name="l00073"></a>00073         $this-&gt;application = $application;
<a name="l00074"></a>00074     }
<a name="l00075"></a>00075 
<a name="l00079"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a9be5e0bdb5720efed6ddb6426c5c16ee">00079</a>     <span class="keyword">protected</span> function configure()
<a name="l00080"></a>00080     {
<a name="l00081"></a>00081     }
<a name="l00082"></a>00082 
<a name="l00093"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#ab31c72b72ddaf7116db5d84c055d3c0b">00093</a>     <span class="keyword">protected</span> function execute(<a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_input_1_1_input_interface.html">InputInterface</a> $input, <a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_output_1_1_output_interface.html">OutputInterface</a> $output)
<a name="l00094"></a>00094     {
<a name="l00095"></a>00095         <span class="keywordflow">throw</span> <span class="keyword">new</span> \LogicException(<span class="stringliteral">&#39;You must override the execute() method in the concrete command class.&#39;</span>);
<a name="l00096"></a>00096     }
<a name="l00097"></a>00097 
<a name="l00104"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a5b0d2db2d500d4b87b996412d89099d3">00104</a>     <span class="keyword">protected</span> function interact(<a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_input_1_1_input_interface.html">InputInterface</a> $input, <a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_output_1_1_output_interface.html">OutputInterface</a> $output)
<a name="l00105"></a>00105     {
<a name="l00106"></a>00106     }
<a name="l00107"></a>00107 
<a name="l00117"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#ae80be888d728ab1ac1618e14bb342820">00117</a>     <span class="keyword">protected</span> function initialize(<a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_input_1_1_input_interface.html">InputInterface</a> $input, <a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_output_1_1_output_interface.html">OutputInterface</a> $output)
<a name="l00118"></a>00118     {
<a name="l00119"></a>00119     }
<a name="l00120"></a>00120 
<a name="l00127"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#acc17fc4b2880856deb16661a443fe08e">00127</a>     <span class="keyword">public</span> function run(<a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_input_1_1_input_interface.html">InputInterface</a> $input, <a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_output_1_1_output_interface.html">OutputInterface</a> $output)
<a name="l00128"></a>00128     {
<a name="l00129"></a>00129         <span class="comment">// add the application arguments and options</span>
<a name="l00130"></a>00130         $this-&gt;mergeApplicationDefinition();
<a name="l00131"></a>00131 
<a name="l00132"></a>00132         <span class="comment">// bind the input against the command specific arguments/options</span>
<a name="l00133"></a>00133         <span class="keywordflow">try</span> {
<a name="l00134"></a>00134             $input-&gt;<a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_input_1_1_input_interface.html#adeccafc40674c113fca92360646172e7">bind</a>($this-&gt;definition);
<a name="l00135"></a>00135         } <span class="keywordflow">catch</span> (\Exception $e) {
<a name="l00136"></a>00136             <span class="keywordflow">if</span> (!$this-&gt;ignoreValidationErrors) {
<a name="l00137"></a>00137                 <span class="keywordflow">throw</span> $e;
<a name="l00138"></a>00138             }
<a name="l00139"></a>00139         }
<a name="l00140"></a>00140 
<a name="l00141"></a>00141         $this-&gt;initialize($input, $output);
<a name="l00142"></a>00142 
<a name="l00143"></a>00143         <span class="keywordflow">if</span> ($input-&gt;isInteractive()) {
<a name="l00144"></a>00144             $this-&gt;interact($input, $output);
<a name="l00145"></a>00145         }
<a name="l00146"></a>00146 
<a name="l00147"></a>00147         $input-&gt;validate();
<a name="l00148"></a>00148 
<a name="l00149"></a>00149         <span class="keywordflow">if</span> ($this-&gt;code) {
<a name="l00150"></a>00150             <span class="keywordflow">return</span> call_user_func($this-&gt;code, $input, $output);
<a name="l00151"></a>00151         } <span class="keywordflow">else</span> {
<a name="l00152"></a>00152             <span class="keywordflow">return</span> $this-&gt;execute($input, $output);
<a name="l00153"></a>00153         }
<a name="l00154"></a>00154     }
<a name="l00155"></a>00155 
<a name="l00163"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a9c05327374b79732c328c6f7811c8497">00163</a>     <span class="keyword">public</span> function setCode(\Closure $code)
<a name="l00164"></a>00164     {
<a name="l00165"></a>00165         $this-&gt;code = $code;
<a name="l00166"></a>00166 
<a name="l00167"></a>00167         <span class="keywordflow">return</span> $this;
<a name="l00168"></a>00168     }
<a name="l00169"></a>00169 
<a name="l00173"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a91c24bd0a7be052079e5b61662a81eeb">00173</a>     <span class="keyword">protected</span> function mergeApplicationDefinition()
<a name="l00174"></a>00174     {
<a name="l00175"></a>00175         <span class="keywordflow">if</span> (null === $this-&gt;application || <span class="keyword">true</span> === $this-&gt;applicationDefinitionMerged) {
<a name="l00176"></a>00176             <span class="keywordflow">return</span>;
<a name="l00177"></a>00177         }
<a name="l00178"></a>00178 
<a name="l00179"></a>00179         $this-&gt;definition-&gt;setArguments(array_merge(
<a name="l00180"></a>00180             $this-&gt;application-&gt;getDefinition()-&gt;getArguments(),
<a name="l00181"></a>00181             $this-&gt;definition-&gt;getArguments()
<a name="l00182"></a>00182         ));
<a name="l00183"></a>00183 
<a name="l00184"></a>00184         $this-&gt;definition-&gt;addOptions($this-&gt;application-&gt;getDefinition()-&gt;getOptions());
<a name="l00185"></a>00185 
<a name="l00186"></a>00186         $this-&gt;applicationDefinitionMerged = <span class="keyword">true</span>;
<a name="l00187"></a>00187     }
<a name="l00188"></a>00188 
<a name="l00196"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a633d4b963ba13775519a92a3c34780ec">00196</a>     <span class="keyword">public</span> function setDefinition($definition)
<a name="l00197"></a>00197     {
<a name="l00198"></a>00198         <span class="keywordflow">if</span> ($definition instanceof <a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html">InputDefinition</a>) {
<a name="l00199"></a>00199             $this-&gt;definition = $definition;
<a name="l00200"></a>00200         } <span class="keywordflow">else</span> {
<a name="l00201"></a>00201             $this-&gt;definition-&gt;setDefinition($definition);
<a name="l00202"></a>00202         }
<a name="l00203"></a>00203 
<a name="l00204"></a>00204         $this-&gt;applicationDefinitionMerged = <span class="keyword">false</span>;
<a name="l00205"></a>00205 
<a name="l00206"></a>00206         <span class="keywordflow">return</span> $this;
<a name="l00207"></a>00207     }
<a name="l00208"></a>00208 
<a name="l00214"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#ada012e6c80eda0d807425b598b1dc611">00214</a>     <span class="keyword">public</span> function getDefinition()
<a name="l00215"></a>00215     {
<a name="l00216"></a>00216         <span class="keywordflow">return</span> $this-&gt;definition;
<a name="l00217"></a>00217     }
<a name="l00218"></a>00218 
<a name="l00229"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a04bb0142af0b8685a0b99955fce77569">00229</a>     <span class="keyword">public</span> function addArgument($name, $mode = null, $description = <span class="stringliteral">&#39;&#39;</span>, $default = null)
<a name="l00230"></a>00230     {
<a name="l00231"></a>00231         $this-&gt;definition-&gt;addArgument(<span class="keyword">new</span> <a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_argument.html">InputArgument</a>($name, $mode, $description, $default));
<a name="l00232"></a>00232 
<a name="l00233"></a>00233         <span class="keywordflow">return</span> $this;
<a name="l00234"></a>00234     }
<a name="l00235"></a>00235 
<a name="l00247"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#af8a9f1b5fb3d9ba9ad9dc9564fe95c75">00247</a>     <span class="keyword">public</span> function addOption($name, $shortcut = null, $mode = null, $description = <span class="stringliteral">&#39;&#39;</span>, $default = null)
<a name="l00248"></a>00248     {
<a name="l00249"></a>00249         $this-&gt;definition-&gt;addOption(<span class="keyword">new</span> <a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_option.html">InputOption</a>($name, $shortcut, $mode, $description, $default));
<a name="l00250"></a>00250 
<a name="l00251"></a>00251         <span class="keywordflow">return</span> $this;
<a name="l00252"></a>00252     }
<a name="l00253"></a>00253 
<a name="l00268"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a2fe666694997d047711d7653eca2f132">00268</a>     <span class="keyword">public</span> function setName($name)
<a name="l00269"></a>00269     {
<a name="l00270"></a>00270         <span class="keywordflow">if</span> (!is_string($name)){
<a name="l00271"></a>00271             echo get_class($name);        }
<a name="l00272"></a>00272 
<a name="l00273"></a>00273         <span class="keywordflow">if</span> (<span class="keyword">false</span> !== $pos = strrpos($name, <span class="charliteral">&#39;:&#39;</span>)) {
<a name="l00274"></a>00274             $namespace = substr($name, 0, $pos);
<a name="l00275"></a>00275             $name = substr($name, $pos + 1);
<a name="l00276"></a>00276         } <span class="keywordflow">else</span> {
<a name="l00277"></a>00277             $namespace = $this-&gt;<span class="keyword">namespace</span>;
<a name="l00278"></a>00278         }
<a name="l00279"></a>00279 
<a name="l00280"></a>00280         <span class="keywordflow">if</span> (!$name) {
<a name="l00281"></a>00281             <span class="keywordflow">throw</span> <span class="keyword">new</span> \InvalidArgumentException(<span class="stringliteral">&#39;A command name cannot be empty.&#39;</span>);
<a name="l00282"></a>00282         }
<a name="l00283"></a>00283 
<a name="l00284"></a>00284         $this-&gt;<span class="keyword">namespace </span>= $namespace;
<a name="l00285"></a>00285         $this-&gt;name = $name;
<a name="l00286"></a>00286 
<a name="l00287"></a>00287         <span class="keywordflow">return</span> $this;
<a name="l00288"></a>00288     }
<a name="l00289"></a>00289 
<a name="l00295"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a2614df64646ac71b70b1e1074258052b">00295</a>     <span class="keyword">public</span> function getNamespace()
<a name="l00296"></a>00296     {
<a name="l00297"></a>00297         <span class="keywordflow">return</span> $this-&gt;<span class="keyword">namespace</span>;
<a name="l00298"></a>00298     }
<a name="l00299"></a>00299 
<a name="l00305"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a3d0963e68bb313b163a73f2803c64600">00305</a>     <span class="keyword">public</span> function getName()
<a name="l00306"></a>00306     {
<a name="l00307"></a>00307         <span class="keywordflow">return</span> $this-&gt;name;
<a name="l00308"></a>00308     }
<a name="l00309"></a>00309 
<a name="l00315"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a2b284f11184201a8ba8a92de57f93580">00315</a>     <span class="keyword">public</span> function getFullName()
<a name="l00316"></a>00316     {
<a name="l00317"></a>00317         <span class="keywordflow">return</span> $this-&gt;getNamespace() ? $this-&gt;getNamespace().<span class="charliteral">&#39;:&#39;</span>.$this-&gt;getName() : $this-&gt;getName();
<a name="l00318"></a>00318     }
<a name="l00319"></a>00319 
<a name="l00327"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a31fad3e39336ea079ea758e051866627">00327</a>     <span class="keyword">public</span> function setDescription($description)
<a name="l00328"></a>00328     {
<a name="l00329"></a>00329         $this-&gt;description = $description;
<a name="l00330"></a>00330 
<a name="l00331"></a>00331         <span class="keywordflow">return</span> $this;
<a name="l00332"></a>00332     }
<a name="l00333"></a>00333 
<a name="l00339"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a2e7bb35c71bf1824456ceb944cb7a845">00339</a>     <span class="keyword">public</span> function getDescription()
<a name="l00340"></a>00340     {
<a name="l00341"></a>00341         <span class="keywordflow">return</span> $this-&gt;description;
<a name="l00342"></a>00342     }
<a name="l00343"></a>00343 
<a name="l00351"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a889da9425e850ea61ac47159c129a316">00351</a>     <span class="keyword">public</span> function setHelp($help)
<a name="l00352"></a>00352     {
<a name="l00353"></a>00353         $this-&gt;help = $help;
<a name="l00354"></a>00354 
<a name="l00355"></a>00355         <span class="keywordflow">return</span> $this;
<a name="l00356"></a>00356     }
<a name="l00357"></a>00357 
<a name="l00363"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a4cc928ef4def3a84c181608d31bf7608">00363</a>     <span class="keyword">public</span> function getHelp()
<a name="l00364"></a>00364     {
<a name="l00365"></a>00365         <span class="keywordflow">return</span> $this-&gt;help;
<a name="l00366"></a>00366     }
<a name="l00367"></a>00367 
<a name="l00374"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a8cf8b0c92ba14df21ddb53284656e754">00374</a>     <span class="keyword">public</span> function getProcessedHelp()
<a name="l00375"></a>00375     {
<a name="l00376"></a>00376         $name = $this-&gt;<span class="keyword">namespace</span>.<span class="charliteral">&#39;:&#39;</span>.$this-&gt;name;
<a name="l00377"></a>00377 
<a name="l00378"></a>00378         $placeholders = array(
<a name="l00379"></a>00379             <span class="stringliteral">&#39;%command.name%&#39;</span>,
<a name="l00380"></a>00380             <span class="stringliteral">&#39;%command.full_name%&#39;</span>
<a name="l00381"></a>00381         );
<a name="l00382"></a>00382         $replacements = array(
<a name="l00383"></a>00383             $name,
<a name="l00384"></a>00384             $_SERVER[<span class="stringliteral">&#39;PHP_SELF&#39;</span>].<span class="charliteral">&#39; &#39;</span>.$name
<a name="l00385"></a>00385         );
<a name="l00386"></a>00386 
<a name="l00387"></a>00387         <span class="keywordflow">return</span> str_replace($placeholders, $replacements, $this-&gt;getHelp());
<a name="l00388"></a>00388     }
<a name="l00389"></a>00389 
<a name="l00397"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a4d0b21202b9cb86f81d2f4a5a5511e33">00397</a>     <span class="keyword">public</span> function setAliases($aliases)
<a name="l00398"></a>00398     {
<a name="l00399"></a>00399         $this-&gt;aliases = $aliases;
<a name="l00400"></a>00400 
<a name="l00401"></a>00401         <span class="keywordflow">return</span> $this;
<a name="l00402"></a>00402     }
<a name="l00403"></a>00403 
<a name="l00409"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a1e9e143d493aedb855d3c5edadb17bb2">00409</a>     <span class="keyword">public</span> function getAliases()
<a name="l00410"></a>00410     {
<a name="l00411"></a>00411         <span class="keywordflow">return</span> $this-&gt;aliases;
<a name="l00412"></a>00412     }
<a name="l00413"></a>00413 
<a name="l00419"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a689e3214627e1e86671c39f506bb5ff5">00419</a>     <span class="keyword">public</span> function getSynopsis()
<a name="l00420"></a>00420     {
<a name="l00421"></a>00421         <span class="keywordflow">return</span> sprintf(<span class="stringliteral">&#39;%s %s&#39;</span>, $this-&gt;getFullName(), $this-&gt;definition-&gt;getSynopsis());
<a name="l00422"></a>00422     }
<a name="l00423"></a>00423 
<a name="l00433"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#aac754e69de0422d173417a192292d134">00433</a>     <span class="keyword">protected</span> function getHelper($name)
<a name="l00434"></a>00434     {
<a name="l00435"></a>00435         <span class="keywordflow">return</span> $this-&gt;application-&gt;getHelperSet()-&gt;get($name);
<a name="l00436"></a>00436     }
<a name="l00437"></a>00437 
<a name="l00447"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#abc8e9e31bb15c8a44c3210ec551407c8">00447</a>     <span class="keyword">public</span> function __get($name)
<a name="l00448"></a>00448     {
<a name="l00449"></a>00449         <span class="keywordflow">return</span> $this-&gt;application-&gt;getHelperSet()-&gt;get($name);
<a name="l00450"></a>00450     }
<a name="l00451"></a>00451 
<a name="l00457"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a84818e2c0f3af87f9b3c7a0818fe0425">00457</a>     <span class="keyword">public</span> function asText()
<a name="l00458"></a>00458     {
<a name="l00459"></a>00459         $messages = array(
<a name="l00460"></a>00460             <span class="stringliteral">&#39;&lt;comment&gt;Usage:&lt;/comment&gt;&#39;</span>,
<a name="l00461"></a>00461             <span class="charliteral">&#39; &#39;</span>.$this-&gt;getSynopsis(),
<a name="l00462"></a>00462             <span class="stringliteral">&#39;&#39;</span>,
<a name="l00463"></a>00463         );
<a name="l00464"></a>00464 
<a name="l00465"></a>00465         <span class="keywordflow">if</span> ($this-&gt;getAliases()) {
<a name="l00466"></a>00466             $messages[] = <span class="stringliteral">&#39;&lt;comment&gt;Aliases:&lt;/comment&gt; &lt;info&gt;&#39;</span>.implode(<span class="stringliteral">&#39;, &#39;</span>, $this-&gt;getAliases()).<span class="stringliteral">&#39;&lt;/info&gt;&#39;</span>;
<a name="l00467"></a>00467         }
<a name="l00468"></a>00468 
<a name="l00469"></a>00469         $messages[] = $this-&gt;definition-&gt;asText();
<a name="l00470"></a>00470 
<a name="l00471"></a>00471         <span class="keywordflow">if</span> ($help = $this-&gt;getProcessedHelp()) {
<a name="l00472"></a>00472             $messages[] = <span class="stringliteral">&#39;&lt;comment&gt;Help:&lt;/comment&gt;&#39;</span>;
<a name="l00473"></a>00473             $messages[] = <span class="charliteral">&#39; &#39;</span>.implode(<span class="stringliteral">&quot;\n &quot;</span>, explode(<span class="stringliteral">&quot;\n&quot;</span>, $help)).<span class="stringliteral">&quot;\n&quot;</span>;
<a name="l00474"></a>00474         }
<a name="l00475"></a>00475 
<a name="l00476"></a>00476         <span class="keywordflow">return</span> implode(<span class="stringliteral">&quot;\n&quot;</span>, $messages);
<a name="l00477"></a>00477     }
<a name="l00478"></a>00478 
<a name="l00486"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_command_1_1_command.html#a5d92e59f543d48ffc4bb7a0bff21dd05">00486</a>     <span class="keyword">public</span> function asXml($asDom = <span class="keyword">false</span>)
<a name="l00487"></a>00487     {
<a name="l00488"></a>00488         $dom = <span class="keyword">new</span> \DOMDocument(<span class="stringliteral">&#39;1.0&#39;</span>, <span class="stringliteral">&#39;UTF-8&#39;</span>);
<a name="l00489"></a>00489         $dom-&gt;formatOutput = <span class="keyword">true</span>;
<a name="l00490"></a>00490         $dom-&gt;appendChild($commandXML = $dom-&gt;createElement(<span class="stringliteral">&#39;command&#39;</span>));
<a name="l00491"></a>00491         $commandXML-&gt;setAttribute(<span class="stringliteral">&#39;id&#39;</span>, $this-&gt;getFullName());
<a name="l00492"></a>00492         $commandXML-&gt;setAttribute(<span class="stringliteral">&#39;namespace&#39;</span>, $this-&gt;getNamespace() ? $this-&gt;getNamespace() : <span class="stringliteral">&#39;_global&#39;</span>);
<a name="l00493"></a>00493         $commandXML-&gt;setAttribute(<span class="stringliteral">&#39;name&#39;</span>, $this-&gt;getName());
<a name="l00494"></a>00494 
<a name="l00495"></a>00495         $commandXML-&gt;appendChild($usageXML = $dom-&gt;createElement(<span class="stringliteral">&#39;usage&#39;</span>));
<a name="l00496"></a>00496         $usageXML-&gt;appendChild($dom-&gt;createTextNode(sprintf($this-&gt;getSynopsis(), <span class="stringliteral">&#39;&#39;</span>)));
<a name="l00497"></a>00497 
<a name="l00498"></a>00498         $commandXML-&gt;appendChild($descriptionXML = $dom-&gt;createElement(<span class="stringliteral">&#39;description&#39;</span>));
<a name="l00499"></a>00499         $descriptionXML-&gt;appendChild($dom-&gt;createTextNode(implode(<span class="stringliteral">&quot;\n &quot;</span>, explode(<span class="stringliteral">&quot;\n&quot;</span>, $this-&gt;getDescription()))));
<a name="l00500"></a>00500 
<a name="l00501"></a>00501         $commandXML-&gt;appendChild($helpXML = $dom-&gt;createElement(<span class="stringliteral">&#39;help&#39;</span>));
<a name="l00502"></a>00502         $help = $this-&gt;help;
<a name="l00503"></a>00503         $helpXML-&gt;appendChild($dom-&gt;createTextNode(implode(<span class="stringliteral">&quot;\n &quot;</span>, explode(<span class="stringliteral">&quot;\n&quot;</span>, $help))));
<a name="l00504"></a>00504 
<a name="l00505"></a>00505         $commandXML-&gt;appendChild($aliasesXML = $dom-&gt;createElement(<span class="stringliteral">&#39;aliases&#39;</span>));
<a name="l00506"></a>00506         <span class="keywordflow">foreach</span> ($this-&gt;getAliases() as $alias) {
<a name="l00507"></a>00507             $aliasesXML-&gt;appendChild($aliasXML = $dom-&gt;createElement(<span class="stringliteral">&#39;alias&#39;</span>));
<a name="l00508"></a>00508             $aliasXML-&gt;appendChild($dom-&gt;createTextNode($alias));
<a name="l00509"></a>00509         }
<a name="l00510"></a>00510 
<a name="l00511"></a>00511         $definition = $this-&gt;definition-&gt;asXml(<span class="keyword">true</span>);
<a name="l00512"></a>00512         $commandXML-&gt;appendChild($dom-&gt;importNode($definition-&gt;getElementsByTagName(<span class="stringliteral">&#39;arguments&#39;</span>)-&gt;item(0), <span class="keyword">true</span>));
<a name="l00513"></a>00513         $commandXML-&gt;appendChild($dom-&gt;importNode($definition-&gt;getElementsByTagName(<span class="stringliteral">&#39;options&#39;</span>)-&gt;item(0), <span class="keyword">true</span>));
<a name="l00514"></a>00514 
<a name="l00515"></a>00515         <span class="keywordflow">return</span> $asDom ? $dom : $dom-&gt;saveXml();
<a name="l00516"></a>00516     }
<a name="l00517"></a>00517 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>Command.php</b>      </li>
      <li class="footer">Generated on Fri Mar 4 2011 23:20:13 for utopia3 by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </li>
    </ul>
  </div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>


</body>
</html>
