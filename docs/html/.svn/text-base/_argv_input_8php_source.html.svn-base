<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>utopia3: trunk/lib/components/symfony/Console/Input/ArgvInput.php Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">utopia3</div>
   <div id="projectbrief">utopia framework - version3</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('_argv_input_8php.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>trunk/lib/components/symfony/Console/Input/ArgvInput.php</h1>  </div>
</div>
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 &lt;?php
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 <span class="keyword">namespace </span>Symfony\Components\Console\Input;
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="comment">/*</span>
<a name="l00006"></a>00006 <span class="comment"> * This file is part of the Symfony framework.</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> * (c) Fabien Potencier &lt;fabien.potencier@symfony-project.com&gt;</span>
<a name="l00009"></a>00009 <span class="comment"> *</span>
<a name="l00010"></a>00010 <span class="comment"> * This source file is subject to the MIT license that is bundled</span>
<a name="l00011"></a>00011 <span class="comment"> * with this source code in the file LICENSE.</span>
<a name="l00012"></a>00012 <span class="comment"> */</span>
<a name="l00013"></a>00013 
<a name="l00041"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html">00041</a> <span class="keyword">class </span><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html">ArgvInput</a> <span class="keyword">extends</span> <a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input.html">Input</a>
<a name="l00042"></a>00042 {
<a name="l00043"></a>00043     <span class="keyword">protected</span> $tokens;
<a name="l00044"></a>00044     <span class="keyword">protected</span> $parsed;
<a name="l00045"></a>00045 
<a name="l00052"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#a0bf35c6e58f69ff7460b27b4b2f025bc">00052</a>     <span class="keyword">public</span> function __construct(array $argv = null, <a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_input_definition.html">InputDefinition</a> $definition = null)
<a name="l00053"></a>00053     {
<a name="l00054"></a>00054         <span class="keywordflow">if</span> (null === $argv) {
<a name="l00055"></a>00055             $argv = $_SERVER[<span class="stringliteral">&#39;argv&#39;</span>];
<a name="l00056"></a>00056         }
<a name="l00057"></a>00057 
<a name="l00058"></a>00058         <span class="comment">// strip the program name</span>
<a name="l00059"></a>00059         array_shift($argv);
<a name="l00060"></a>00060 
<a name="l00061"></a>00061         $this-&gt;tokens = $argv;
<a name="l00062"></a>00062 
<a name="l00063"></a>00063         parent::__construct($definition);
<a name="l00064"></a>00064     }
<a name="l00065"></a>00065 
<a name="l00069"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#a38d99acc70a1d8fd8f94455743b2d237">00069</a>     <span class="keyword">protected</span> function parse()
<a name="l00070"></a>00070     {
<a name="l00071"></a>00071         $this-&gt;parsed = $this-&gt;tokens;
<a name="l00072"></a>00072         <span class="keywordflow">while</span> (null !== $token = array_shift($this-&gt;parsed)) {
<a name="l00073"></a>00073             <span class="keywordflow">if</span> (<span class="stringliteral">&#39;--&#39;</span> === substr($token, 0, 2)) {
<a name="l00074"></a>00074                 $this-&gt;parseLongOption($token);
<a name="l00075"></a>00075             } elseif (<span class="charliteral">&#39;-&#39;</span> === $token[0]) {
<a name="l00076"></a>00076                 $this-&gt;parseShortOption($token);
<a name="l00077"></a>00077             } <span class="keywordflow">else</span> {
<a name="l00078"></a>00078                 $this-&gt;parseArgument($token);
<a name="l00079"></a>00079             }
<a name="l00080"></a>00080         }
<a name="l00081"></a>00081     }
<a name="l00082"></a>00082 
<a name="l00088"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#a3c01732860bd9ae6217ec2e1870e00fd">00088</a>     <span class="keyword">protected</span> function parseShortOption($token)
<a name="l00089"></a>00089     {
<a name="l00090"></a>00090         $name = substr($token, 1);
<a name="l00091"></a>00091 
<a name="l00092"></a>00092         <span class="keywordflow">if</span> (strlen($name) &gt; 1) {
<a name="l00093"></a>00093             <span class="keywordflow">if</span> ($this-&gt;definition-&gt;hasShortcut($name[0]) &amp;&amp; $this-&gt;definition-&gt;getOptionForShortcut($name[0])-&gt;acceptParameter()) {
<a name="l00094"></a>00094                 <span class="comment">// an option with a value (with no space)</span>
<a name="l00095"></a>00095                 $this-&gt;addShortOption($name[0], substr($name, 1));
<a name="l00096"></a>00096             } <span class="keywordflow">else</span> {
<a name="l00097"></a>00097                 $this-&gt;parseShortOptionSet($name);
<a name="l00098"></a>00098             }
<a name="l00099"></a>00099         } <span class="keywordflow">else</span> {
<a name="l00100"></a>00100             $this-&gt;addShortOption($name, null);
<a name="l00101"></a>00101         }
<a name="l00102"></a>00102     }
<a name="l00103"></a>00103 
<a name="l00111"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#a9ad982c2161431cfc3ae0d3396e310ce">00111</a>     <span class="keyword">protected</span> function parseShortOptionSet($name)
<a name="l00112"></a>00112     {
<a name="l00113"></a>00113         $len = strlen($name);
<a name="l00114"></a>00114         <span class="keywordflow">for</span> ($i = 0; $i &lt; $len; $i++) {
<a name="l00115"></a>00115             <span class="keywordflow">if</span> (!$this-&gt;definition-&gt;hasShortcut($name[$i])) {
<a name="l00116"></a>00116                 <span class="keywordflow">throw</span> <span class="keyword">new</span> \RuntimeException(sprintf(<span class="stringliteral">&#39;The &quot;-%s&quot; option does not exist.&#39;</span>, $name[$i]));
<a name="l00117"></a>00117             }
<a name="l00118"></a>00118 
<a name="l00119"></a>00119             $option = $this-&gt;definition-&gt;getOptionForShortcut($name[$i]);
<a name="l00120"></a>00120             <span class="keywordflow">if</span> ($option-&gt;acceptParameter()) {
<a name="l00121"></a>00121                 $this-&gt;addLongOption($option-&gt;getName(), $i === $len - 1 ? null : substr($name, $i + 1));
<a name="l00122"></a>00122 
<a name="l00123"></a>00123                 <span class="keywordflow">break</span>;
<a name="l00124"></a>00124             } <span class="keywordflow">else</span> {
<a name="l00125"></a>00125                 $this-&gt;addLongOption($option-&gt;getName(), <span class="keyword">true</span>);
<a name="l00126"></a>00126             }
<a name="l00127"></a>00127         }
<a name="l00128"></a>00128     }
<a name="l00129"></a>00129 
<a name="l00135"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#ad577fbade94b435028ae463707df0a0b">00135</a>     <span class="keyword">protected</span> function parseLongOption($token)
<a name="l00136"></a>00136     {
<a name="l00137"></a>00137         $name = substr($token, 2);
<a name="l00138"></a>00138 
<a name="l00139"></a>00139         <span class="keywordflow">if</span> (<span class="keyword">false</span> !== $pos = strpos($name, <span class="charliteral">&#39;=&#39;</span>)) {
<a name="l00140"></a>00140             $this-&gt;addLongOption(substr($name, 0, $pos), substr($name, $pos + 1));
<a name="l00141"></a>00141         } <span class="keywordflow">else</span> {
<a name="l00142"></a>00142             $this-&gt;addLongOption($name, null);
<a name="l00143"></a>00143         }
<a name="l00144"></a>00144     }
<a name="l00145"></a>00145 
<a name="l00153"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#a497f1014327bfbc138b4c4e7f1852106">00153</a>     <span class="keyword">protected</span> function parseArgument($token)
<a name="l00154"></a>00154     {
<a name="l00155"></a>00155         <span class="keywordflow">if</span> (!$this-&gt;definition-&gt;hasArgument(count($this-&gt;arguments))) {
<a name="l00156"></a>00156             <span class="keywordflow">throw</span> <span class="keyword">new</span> \RuntimeException(<span class="stringliteral">&#39;Too many arguments.&#39;</span>);
<a name="l00157"></a>00157         }
<a name="l00158"></a>00158 
<a name="l00159"></a>00159         $this-&gt;arguments[$this-&gt;definition-&gt;getArgument(count($this-&gt;arguments))-&gt;getName()] = $token;
<a name="l00160"></a>00160     }
<a name="l00161"></a>00161 
<a name="l00170"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#a7c82bd001b1072d631bc9f692e6522ef">00170</a>     <span class="keyword">protected</span> function addShortOption($shortcut, $value)
<a name="l00171"></a>00171     {
<a name="l00172"></a>00172         <span class="keywordflow">if</span> (!$this-&gt;definition-&gt;hasShortcut($shortcut)) {
<a name="l00173"></a>00173             <span class="keywordflow">throw</span> <span class="keyword">new</span> \RuntimeException(sprintf(<span class="stringliteral">&#39;The &quot;-%s&quot; option does not exist.&#39;</span>, $shortcut));
<a name="l00174"></a>00174         }
<a name="l00175"></a>00175 
<a name="l00176"></a>00176         $this-&gt;addLongOption($this-&gt;definition-&gt;getOptionForShortcut($shortcut)-&gt;getName(), $value);
<a name="l00177"></a>00177     }
<a name="l00178"></a>00178 
<a name="l00187"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#aa82dc00580e8f0388fff7e987c2b4aa8">00187</a>     <span class="keyword">protected</span> function addLongOption($name, $value)
<a name="l00188"></a>00188     {
<a name="l00189"></a>00189         <span class="keywordflow">if</span> (!$this-&gt;definition-&gt;hasOption($name)) {
<a name="l00190"></a>00190             <span class="keywordflow">throw</span> <span class="keyword">new</span> \RuntimeException(sprintf(<span class="stringliteral">&#39;The &quot;--%s&quot; option does not exist.&#39;</span>, $name));
<a name="l00191"></a>00191         }
<a name="l00192"></a>00192 
<a name="l00193"></a>00193         $option = $this-&gt;definition-&gt;getOption($name);
<a name="l00194"></a>00194 
<a name="l00195"></a>00195         <span class="keywordflow">if</span> (null === $value &amp;&amp; $option-&gt;acceptParameter()) {
<a name="l00196"></a>00196             <span class="comment">// if option accepts an optional or mandatory argument</span>
<a name="l00197"></a>00197             <span class="comment">// let&#39;s see if there is one provided</span>
<a name="l00198"></a>00198             $next = array_shift($this-&gt;parsed);
<a name="l00199"></a>00199             <span class="keywordflow">if</span> (<span class="charliteral">&#39;-&#39;</span> !== $next[0]) {
<a name="l00200"></a>00200                 $value = $next;
<a name="l00201"></a>00201             } <span class="keywordflow">else</span> {
<a name="l00202"></a>00202                 array_unshift($this-&gt;parsed, $next);
<a name="l00203"></a>00203             }
<a name="l00204"></a>00204         }
<a name="l00205"></a>00205 
<a name="l00206"></a>00206         <span class="keywordflow">if</span> (null === $value) {
<a name="l00207"></a>00207             <span class="keywordflow">if</span> ($option-&gt;isParameterRequired()) {
<a name="l00208"></a>00208                 <span class="keywordflow">throw</span> <span class="keyword">new</span> \RuntimeException(sprintf(<span class="stringliteral">&#39;The &quot;--%s&quot; option requires a value.&#39;</span>, $name));
<a name="l00209"></a>00209             }
<a name="l00210"></a>00210 
<a name="l00211"></a>00211             $value = $option-&gt;isParameterOptional() ? $option-&gt;getDefault() : <span class="keyword">true</span>;
<a name="l00212"></a>00212         }
<a name="l00213"></a>00213 
<a name="l00214"></a>00214         $this-&gt;options[$name] = $value;
<a name="l00215"></a>00215     }
<a name="l00216"></a>00216 
<a name="l00222"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#af2c0efe177067f350eb7d027d5cb0d48">00222</a>     <span class="keyword">public</span> function getFirstArgument()
<a name="l00223"></a>00223     {
<a name="l00224"></a>00224         <span class="keywordflow">foreach</span> ($this-&gt;tokens as $token) {
<a name="l00225"></a>00225             <span class="keywordflow">if</span> ($token &amp;&amp; <span class="charliteral">&#39;-&#39;</span> === $token[0]) {
<a name="l00226"></a>00226                 <span class="keywordflow">continue</span>;
<a name="l00227"></a>00227             }
<a name="l00228"></a>00228 
<a name="l00229"></a>00229             <span class="keywordflow">return</span> $token;
<a name="l00230"></a>00230         }
<a name="l00231"></a>00231     }
<a name="l00232"></a>00232 
<a name="l00243"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_input_1_1_argv_input.html#a0e8e5ab4feedf51eb06791d59c730463">00243</a>     <span class="keyword">public</span> function hasParameterOption($values)
<a name="l00244"></a>00244     {
<a name="l00245"></a>00245         <span class="keywordflow">if</span> (!is_array($values)) {
<a name="l00246"></a>00246             $values = array($values);
<a name="l00247"></a>00247         }
<a name="l00248"></a>00248 
<a name="l00249"></a>00249         <span class="keywordflow">foreach</span> ($this-&gt;tokens as $v) {
<a name="l00250"></a>00250             <span class="keywordflow">if</span> (in_array($v, $values)) {
<a name="l00251"></a>00251                 <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00252"></a>00252             }
<a name="l00253"></a>00253         }
<a name="l00254"></a>00254 
<a name="l00255"></a>00255         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00256"></a>00256     }
<a name="l00257"></a>00257 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>ArgvInput.php</b>      </li>
      <li class="footer">Generated on Fri Mar 4 2011 23:20:13 for utopia3 by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </li>
    </ul>
  </div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>


</body>
</html>
