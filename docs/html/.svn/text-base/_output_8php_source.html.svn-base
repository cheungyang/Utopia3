<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>utopia3: trunk/lib/components/symfony/Console/Output/Output.php Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">utopia3</div>
   <div id="projectbrief">utopia framework - version3</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('_output_8php.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>trunk/lib/components/symfony/Console/Output/Output.php</h1>  </div>
</div>
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 &lt;?php
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 <span class="keyword">namespace </span>Symfony\Components\Console\Output;
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 <span class="comment">/*</span>
<a name="l00006"></a>00006 <span class="comment"> * This file is part of the Symfony framework.</span>
<a name="l00007"></a>00007 <span class="comment"> *</span>
<a name="l00008"></a>00008 <span class="comment"> * (c) Fabien Potencier &lt;fabien.potencier@symfony-project.com&gt;</span>
<a name="l00009"></a>00009 <span class="comment"> *</span>
<a name="l00010"></a>00010 <span class="comment"> * This source file is subject to the MIT license that is bundled</span>
<a name="l00011"></a>00011 <span class="comment"> * with this source code in the file LICENSE.</span>
<a name="l00012"></a>00012 <span class="comment"> */</span>
<a name="l00013"></a>00013 
<a name="l00027"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html">00027</a> <span class="keyword">abstract</span> <span class="keyword">class </span><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html">Output</a> <span class="keyword">implements</span> <a class="code" href="interface_symfony_1_1_components_1_1_console_1_1_output_1_1_output_interface.html">OutputInterface</a>
<a name="l00028"></a>00028 {
<a name="l00029"></a>00029     <span class="keyword">const</span> VERBOSITY_QUIET   = 0;
<a name="l00030"></a>00030     <span class="keyword">const</span> VERBOSITY_NORMAL  = 1;
<a name="l00031"></a>00031     <span class="keyword">const</span> VERBOSITY_VERBOSE = 2;
<a name="l00032"></a>00032 
<a name="l00033"></a>00033     <span class="keyword">const</span> OUTPUT_NORMAL = 0;
<a name="l00034"></a>00034     <span class="keyword">const</span> OUTPUT_RAW = 1;
<a name="l00035"></a>00035     <span class="keyword">const</span> OUTPUT_PLAIN = 2;
<a name="l00036"></a>00036 
<a name="l00037"></a>00037     <span class="keyword">protected</span> $verbosity;
<a name="l00038"></a>00038     <span class="keyword">protected</span> $decorated;
<a name="l00039"></a>00039 
<a name="l00040"></a>00040     <span class="keyword">static</span> <span class="keyword">protected</span> $styles = array(
<a name="l00041"></a>00041         <span class="stringliteral">&#39;error&#39;</span>    =&gt; array(<span class="stringliteral">&#39;bg&#39;</span> =&gt; <span class="stringliteral">&#39;red&#39;</span>, <span class="stringliteral">&#39;fg&#39;</span> =&gt; <span class="stringliteral">&#39;white&#39;</span>),
<a name="l00042"></a>00042         <span class="stringliteral">&#39;info&#39;</span>     =&gt; array(<span class="stringliteral">&#39;fg&#39;</span> =&gt; <span class="stringliteral">&#39;green&#39;</span>),
<a name="l00043"></a>00043         <span class="stringliteral">&#39;comment&#39;</span>  =&gt; array(<span class="stringliteral">&#39;fg&#39;</span> =&gt; <span class="stringliteral">&#39;yellow&#39;</span>),
<a name="l00044"></a>00044         <span class="stringliteral">&#39;question&#39;</span> =&gt; array(<span class="stringliteral">&#39;bg&#39;</span> =&gt; <span class="stringliteral">&#39;cyan&#39;</span>, <span class="stringliteral">&#39;fg&#39;</span> =&gt; <span class="stringliteral">&#39;black&#39;</span>),
<a name="l00045"></a>00045     );
<a name="l00046"></a>00046     <span class="keyword">static</span> <span class="keyword">protected</span> $options    = array(<span class="stringliteral">&#39;bold&#39;</span> =&gt; 1, <span class="stringliteral">&#39;underscore&#39;</span> =&gt; 4, <span class="stringliteral">&#39;blink&#39;</span> =&gt; 5, <span class="stringliteral">&#39;reverse&#39;</span> =&gt; 7, <span class="stringliteral">&#39;conceal&#39;</span> =&gt; 8);
<a name="l00047"></a>00047     <span class="keyword">static</span> <span class="keyword">protected</span> $foreground = array(<span class="stringliteral">&#39;black&#39;</span> =&gt; 30, <span class="stringliteral">&#39;red&#39;</span> =&gt; 31, <span class="stringliteral">&#39;green&#39;</span> =&gt; 32, <span class="stringliteral">&#39;yellow&#39;</span> =&gt; 33, <span class="stringliteral">&#39;blue&#39;</span> =&gt; 34, <span class="stringliteral">&#39;magenta&#39;</span> =&gt; 35, <span class="stringliteral">&#39;cyan&#39;</span> =&gt; 36, <span class="stringliteral">&#39;white&#39;</span> =&gt; 37);
<a name="l00048"></a>00048     <span class="keyword">static</span> <span class="keyword">protected</span> $background = array(<span class="stringliteral">&#39;black&#39;</span> =&gt; 40, <span class="stringliteral">&#39;red&#39;</span> =&gt; 41, <span class="stringliteral">&#39;green&#39;</span> =&gt; 42, <span class="stringliteral">&#39;yellow&#39;</span> =&gt; 43, <span class="stringliteral">&#39;blue&#39;</span> =&gt; 44, <span class="stringliteral">&#39;magenta&#39;</span> =&gt; 45, <span class="stringliteral">&#39;cyan&#39;</span> =&gt; 46, <span class="stringliteral">&#39;white&#39;</span> =&gt; 47);
<a name="l00049"></a>00049 
<a name="l00056"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#aabcb955eb7af02fe6a158b5f0e6fbac5">00056</a>     <span class="keyword">public</span> function __construct($verbosity = self::VERBOSITY_NORMAL, $decorated = null)
<a name="l00057"></a>00057     {
<a name="l00058"></a>00058         $this-&gt;decorated = (Boolean) $decorated;
<a name="l00059"></a>00059         $this-&gt;verbosity = null === $verbosity ? self::VERBOSITY_NORMAL : $verbosity;
<a name="l00060"></a>00060     }
<a name="l00061"></a>00061 
<a name="l00068"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#aaf187529eb006793ded9b093a9d6b5f1">00068</a>     <span class="keyword">static</span> <span class="keyword">public</span> function setStyle($name, $options = array())
<a name="l00069"></a>00069     {
<a name="l00070"></a>00070         static::$styles[strtolower($name)] = $options;
<a name="l00071"></a>00071     }
<a name="l00072"></a>00072 
<a name="l00078"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#a2c6812e1983f0d47511390f5c2daf1ee">00078</a>     <span class="keyword">public</span> function setDecorated($decorated)
<a name="l00079"></a>00079     {
<a name="l00080"></a>00080         $this-&gt;decorated = (Boolean) $decorated;
<a name="l00081"></a>00081     }
<a name="l00082"></a>00082 
<a name="l00088"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#a41be3d2292fe22ba5926d404ac204437">00088</a>     <span class="keyword">public</span> function isDecorated()
<a name="l00089"></a>00089     {
<a name="l00090"></a>00090         <span class="keywordflow">return</span> $this-&gt;decorated;
<a name="l00091"></a>00091     }
<a name="l00092"></a>00092 
<a name="l00098"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#a8301c9b79b5f31943343c81ce7a221e8">00098</a>     <span class="keyword">public</span> function setVerbosity($level)
<a name="l00099"></a>00099     {
<a name="l00100"></a>00100         $this-&gt;verbosity = (int) $level;
<a name="l00101"></a>00101     }
<a name="l00102"></a>00102 
<a name="l00108"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#a3368676956052a34ae7c0ada659b3e32">00108</a>     <span class="keyword">public</span> function getVerbosity()
<a name="l00109"></a>00109     {
<a name="l00110"></a>00110         <span class="keywordflow">return</span> $this-&gt;verbosity;
<a name="l00111"></a>00111     }
<a name="l00112"></a>00112 
<a name="l00119"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#a779ef3470446638ed8914b9c4a02e311">00119</a>     <span class="keyword">public</span> function writeln($messages, $type = 0)
<a name="l00120"></a>00120     {
<a name="l00121"></a>00121         $this-&gt;write($messages, <span class="keyword">true</span>, $type);
<a name="l00122"></a>00122     }
<a name="l00123"></a>00123 
<a name="l00133"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#ae166cb9da545ba8a4d0c74ad02e6e7da">00133</a>     <span class="keyword">public</span> function write($messages, $newline = <span class="keyword">false</span>, $type = 0)
<a name="l00134"></a>00134     {
<a name="l00135"></a>00135         <span class="keywordflow">if</span> (self::VERBOSITY_QUIET === $this-&gt;verbosity) {
<a name="l00136"></a>00136             <span class="keywordflow">return</span>;
<a name="l00137"></a>00137         }
<a name="l00138"></a>00138 
<a name="l00139"></a>00139         <span class="keywordflow">if</span> (!is_array($messages)) {
<a name="l00140"></a>00140             $messages = array($messages);
<a name="l00141"></a>00141         }
<a name="l00142"></a>00142 
<a name="l00143"></a>00143         <span class="keywordflow">foreach</span> ($messages as $message) {
<a name="l00144"></a>00144             <span class="keywordflow">switch</span> ($type) {
<a name="l00145"></a>00145                 <span class="keywordflow">case</span> Output::OUTPUT_NORMAL:
<a name="l00146"></a>00146                     $message = $this-&gt;format($message);
<a name="l00147"></a>00147                     <span class="keywordflow">break</span>;
<a name="l00148"></a>00148                 <span class="keywordflow">case</span> Output::OUTPUT_RAW:
<a name="l00149"></a>00149                     <span class="keywordflow">break</span>;
<a name="l00150"></a>00150                 <span class="keywordflow">case</span> Output::OUTPUT_PLAIN:
<a name="l00151"></a>00151                     $message = strip_tags($this-&gt;format($message));
<a name="l00152"></a>00152                     <span class="keywordflow">break</span>;
<a name="l00153"></a>00153                 <span class="keywordflow">default</span>:
<a name="l00154"></a>00154                     <span class="keywordflow">throw</span> <span class="keyword">new</span> \InvalidArgumentException(sprintf(<span class="stringliteral">&#39;Unknown output type given (%s)&#39;</span>, $type));
<a name="l00155"></a>00155             }
<a name="l00156"></a>00156 
<a name="l00157"></a>00157             $this-&gt;doWrite($message, $newline);
<a name="l00158"></a>00158         }
<a name="l00159"></a>00159     }
<a name="l00160"></a>00160 
<a name="l00167"></a>00167     <span class="keyword">abstract</span> <span class="keyword">public</span> function doWrite($message, $newline);
<a name="l00168"></a>00168 
<a name="l00176"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#aae17ded36d2417328132385167b4fdae">00176</a>     <span class="keyword">protected</span> function format($message)
<a name="l00177"></a>00177     {
<a name="l00178"></a>00178         $message = preg_replace_callback(<span class="stringliteral">&#39;#&lt;([a-z][a-z0-9\-_]+)&gt;#i&#39;</span>, array($this, <span class="stringliteral">&#39;replaceStartStyle&#39;</span>), $message);
<a name="l00179"></a>00179 
<a name="l00180"></a>00180         <span class="keywordflow">return</span> preg_replace_callback(<span class="stringliteral">&#39;#&lt;/([a-z][a-z0-9\-_]+)&gt;#i&#39;</span>, array($this, <span class="stringliteral">&#39;replaceEndStyle&#39;</span>), $message);
<a name="l00181"></a>00181     }
<a name="l00182"></a>00182 
<a name="l00186"></a><a class="code" href="class_symfony_1_1_components_1_1_console_1_1_output_1_1_output.html#ae6555e392521ea4d4c846106d2082e54">00186</a>     <span class="keyword">protected</span> function replaceStartStyle($match)
<a name="l00187"></a>00187     {
<a name="l00188"></a>00188         <span class="keywordflow">if</span> (!$this-&gt;decorated) {
<a name="l00189"></a>00189             <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span>;
<a name="l00190"></a>00190         }
<a name="l00191"></a>00191 
<a name="l00192"></a>00192         <span class="keywordflow">if</span> (!isset(static::$styles[strtolower($match[1])])) {
<a name="l00193"></a>00193             <span class="keywordflow">throw</span> <span class="keyword">new</span> \InvalidArgumentException(sprintf(<span class="stringliteral">&#39;Unknown style &quot;%s&quot;.&#39;</span>, $match[1]));
<a name="l00194"></a>00194         }
<a name="l00195"></a>00195 
<a name="l00196"></a>00196         $parameters = static::$styles[strtolower($match[1])];
<a name="l00197"></a>00197         $codes = array();
<a name="l00198"></a>00198 
<a name="l00199"></a>00199         <span class="keywordflow">if</span> (isset($parameters[<span class="stringliteral">&#39;fg&#39;</span>])) {
<a name="l00200"></a>00200             $codes[] = static::$foreground[$parameters[<span class="stringliteral">&#39;fg&#39;</span>]];
<a name="l00201"></a>00201         }
<a name="l00202"></a>00202 
<a name="l00203"></a>00203         <span class="keywordflow">if</span> (isset($parameters[<span class="stringliteral">&#39;bg&#39;</span>])) {
<a name="l00204"></a>00204             $codes[] = static::$background[$parameters[<span class="stringliteral">&#39;bg&#39;</span>]];
<a name="l00205"></a>00205         }
<a name="l00206"></a>00206 
<a name="l00207"></a>00207         <span class="keywordflow">foreach</span> (static::$options as $option =&gt; $value) {
<a name="l00208"></a>00208             <span class="keywordflow">if</span> (isset($parameters[$option]) &amp;&amp; $parameters[$option]) {
<a name="l00209"></a>00209                 $codes[] = $value;
<a name="l00210"></a>00210             }
<a name="l00211"></a>00211         }
<a name="l00212"></a>00212 
<a name="l00213"></a>00213         <span class="keywordflow">return</span> <span class="stringliteral">&quot;\033[&quot;</span>.implode(<span class="charliteral">&#39;;&#39;</span>, $codes).<span class="charliteral">&#39;m&#39;</span>;
<a name="l00214"></a>00214     }
<a name="l00215"></a>00215 
<a name="l00216"></a>00216     <span class="keyword">protected</span> function replaceEndStyle($match)
<a name="l00217"></a>00217     {
<a name="l00218"></a>00218         <span class="keywordflow">if</span> (!$this-&gt;decorated) {
<a name="l00219"></a>00219             <span class="keywordflow">return</span> <span class="stringliteral">&#39;&#39;</span>;
<a name="l00220"></a>00220         }
<a name="l00221"></a>00221 
<a name="l00222"></a>00222         <span class="keywordflow">return</span> <span class="stringliteral">&quot;\033[0m&quot;</span>;
<a name="l00223"></a>00223     }
<a name="l00224"></a>00224 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>Output.php</b>      </li>
      <li class="footer">Generated on Fri Mar 4 2011 23:20:13 for utopia3 by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </li>
    </ul>
  </div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>


</body>
</html>
