<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>utopia3: trunk/lib/components/mallocworks/DataParser/tests/DataParserTest.php Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.3 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">utopia3</div>
   <div id="projectbrief">utopia framework - version3</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('_data_parser_test_8php.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>trunk/lib/components/mallocworks/DataParser/tests/DataParserTest.php</h1>  </div>
</div>
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 &lt;?php
<a name="l00002"></a>00002 require_once dirname(__FILE__).<span class="stringliteral">&#39;/../../Core/DataObject.php&#39;</span>;
<a name="l00003"></a>00003 require_once dirname(__FILE__).<span class="stringliteral">&#39;/../../Autoloader/Autoload.php&#39;</span>;
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 use Utopia\Components\Autoloader\<a class="code" href="class_utopia_1_1_components_1_1_autoloader_1_1_autoload.html">Autoload</a>;
<a name="l00006"></a>00006 use Utopia\Components\DataParser\DataParser;
<a name="l00007"></a>00007 
<a name="l00008"></a><a class="code" href="class_data_parser_test.html">00008</a> <span class="keyword">class </span><a class="code" href="class_data_parser_test.html">DataParserTest</a> <span class="keyword">extends</span> PHPUnit_Framework_TestCase
<a name="l00009"></a>00009 {
<a name="l00010"></a>00010     <span class="keyword">protected</span> function setUp() {
<a name="l00011"></a>00011         $autoload = <span class="keyword">new</span> <a class="code" href="class_utopia_1_1_components_1_1_autoloader_1_1_autoload.html">Autoload</a>();
<a name="l00012"></a>00012         $autoload
<a name="l00013"></a>00013             -&gt;includeNamespace(<span class="stringliteral">&#39;lib/components/mallocworks&#39;</span>, <span class="stringliteral">&#39;\Utopia\Components&#39;</span>)
<a name="l00014"></a>00014             -&gt;includeNamespace(<span class="stringliteral">&#39;lib/components/symfony&#39;</span>, <span class="stringliteral">&#39;\Symfony\Components&#39;</span>);
<a name="l00015"></a>00015     }
<a name="l00016"></a>00016 
<a name="l00017"></a>00017     <span class="keyword">protected</span> function tearDown() {
<a name="l00018"></a>00018     }
<a name="l00019"></a>00019 
<a name="l00020"></a>00020     <span class="keyword">public</span> function testBasic(){
<a name="l00021"></a>00021         $parser = DataParser::summon();
<a name="l00022"></a>00022 
<a name="l00023"></a>00023         $filename = dirname(__FILE__).<span class="stringliteral">&#39;/test1.yml&#39;</span>;
<a name="l00024"></a>00024         $arr = array(<span class="charliteral">&#39;a&#39;</span>=&gt;array(<span class="charliteral">&#39;b&#39;</span>=&gt;<span class="stringliteral">&#39;hello&#39;</span>));
<a name="l00025"></a>00025         $o = $parser-&gt;asDataObj($filename);
<a name="l00026"></a>00026         $this-&gt;assertEquals($arr, $o-&gt;get(<span class="stringliteral">&#39;&#39;</span>));
<a name="l00027"></a>00027     }
<a name="l00028"></a>00028 
<a name="l00029"></a>00029     <span class="keyword">public</span> function testYaml(){
<a name="l00030"></a>00030         $parser = DataParser::summon();
<a name="l00031"></a>00031 
<a name="l00032"></a>00032         $filename = dirname(__FILE__).<span class="stringliteral">&#39;/test1.yml&#39;</span>;
<a name="l00033"></a>00033         $this-&gt;assertEquals(array(<span class="charliteral">&#39;a&#39;</span>=&gt;array(<span class="charliteral">&#39;b&#39;</span>=&gt;<span class="stringliteral">&#39;hello&#39;</span>)), $parser-&gt;asArray($filename));
<a name="l00034"></a>00034 
<a name="l00035"></a>00035         $yaml = &lt;&lt;&lt;YAML
<a name="l00036"></a>00036 a:
<a name="l00037"></a>00037   b: <span class="stringliteral">&#39;hello2&#39;</span>
<a name="l00038"></a>00038 YAML;
<a name="l00039"></a>00039         $this-&gt;assertEquals(array(<span class="charliteral">&#39;a&#39;</span>=&gt;array(<span class="charliteral">&#39;b&#39;</span>=&gt;<span class="stringliteral">&#39;hello2&#39;</span>)), $parser-&gt;asArray($yaml));
<a name="l00040"></a>00040 
<a name="l00041"></a>00041         $arr = array(<span class="charliteral">&#39;a&#39;</span>=&gt;array(<span class="charliteral">&#39;b&#39;</span>=&gt;<span class="stringliteral">&#39;hello2&#39;</span>));
<a name="l00042"></a>00042         $this-&gt;assertEquals(<span class="stringliteral">&quot;a:\n  b: hello2\n&quot;</span>, $parser-&gt;asYaml($arr));
<a name="l00043"></a>00043 
<a name="l00044"></a>00044         $arr = array(<span class="charliteral">&#39;a&#39;</span>=&gt;array(<span class="charliteral">&#39;b&#39;</span>=&gt;<span class="stringliteral">&#39;hello&#39;</span>));
<a name="l00045"></a>00045         $o = $parser-&gt;asDataObj($filename);
<a name="l00046"></a>00046         $this-&gt;assertEquals($arr, $o-&gt;get(<span class="stringliteral">&#39;&#39;</span>));
<a name="l00047"></a>00047 
<a name="l00048"></a>00048         $controllerdetails = &lt;&lt;&lt;EOF
<a name="l00049"></a>00049 accepts:
<a name="l00050"></a>00050   base: <span class="stringliteral">&#39;welcome&#39;</span>
<a name="l00051"></a>00051   required: ~
<a name="l00052"></a>00052   methods: [<span class="stringliteral">&#39;GET&#39;</span>]
<a name="l00053"></a>00053 description: <span class="stringliteral">&#39;Getting started to pages&#39;</span>
<a name="l00054"></a>00054 spec:
<a name="l00055"></a>00055   <span class="keyword">get</span>:  ~
<a name="l00056"></a>00056   post: ~
<a name="l00057"></a>00057 external:
<a name="l00058"></a>00058   css:
<a name="l00059"></a>00059     ver: <span class="stringliteral">&#39;0.0.1&#39;</span>
<a name="l00060"></a>00060     inc:
<a name="l00061"></a>00061       - <span class="stringliteral">&#39;http:\/\/l.yimg.com\/mq\/i\/sports\/css\/page_api_viewer_1_0_0.css&#39;</span>
<a name="l00062"></a>00062   js:
<a name="l00063"></a>00063     ver: <span class="stringliteral">&#39;0.0.1&#39;</span>
<a name="l00064"></a>00064     inc:
<a name="l00065"></a>00065       - <span class="stringliteral">&#39;http:\/\/code.jquery.com\/jquery-1.4.2.min.js&#39;</span>
<a name="l00066"></a>00066       -
<a name="l00067"></a>00067         alert(<span class="stringliteral">&#39;hello&#39;</span>);
<a name="l00068"></a>00068   tpl: <span class="stringliteral">&#39;lib/Core/Templates/welcome.tpl&#39;</span>
<a name="l00069"></a>00069 EOF;
<a name="l00070"></a>00070         $array = $parser-&gt;asArray($controllerdetails);
<a name="l00071"></a>00071         $this-&gt;assertFalse($array == array());
<a name="l00072"></a>00072     }
<a name="l00073"></a>00073 
<a name="l00074"></a>00074     <span class="keyword">public</span> function testXml(){
<a name="l00075"></a>00075         $parser = $this-&gt;_sc-&gt;parser();
<a name="l00076"></a>00076 
<a name="l00077"></a>00077         <span class="comment">//normal case</span>
<a name="l00078"></a>00078         $filename = dirname(__FILE__).<span class="stringliteral">&#39;/test1.xml&#39;</span>;
<a name="l00079"></a>00079         $array = $parser-&gt;asArray($filename);
<a name="l00080"></a>00080         <span class="comment">//print_r($array);</span>
<a name="l00081"></a>00081         $this-&gt;assertEquals(<span class="stringliteral">&#39;Yahoo! News: The Newsroom&#39;</span>, $array[<span class="stringliteral">&#39;rss&#39;</span>][<span class="stringliteral">&#39;channel&#39;</span>][<span class="stringliteral">&#39;title&#39;</span>]);
<a name="l00082"></a>00082         $xml = $parser-&gt;asXml($array);
<a name="l00083"></a>00083         <span class="comment">//echo $xml;</span>
<a name="l00084"></a>00084 
<a name="l00085"></a>00085         <span class="comment">//flatten/offset/limit/targetchild case</span>
<a name="l00086"></a>00086         $args = array(
<a name="l00087"></a>00087             <span class="stringliteral">&#39;flatten&#39;</span> =&gt; <span class="keyword">false</span>,
<a name="l00088"></a>00088             <span class="stringliteral">&#39;targetchild&#39;</span> =&gt; <span class="stringliteral">&#39;item&#39;</span>,
<a name="l00089"></a>00089             <span class="stringliteral">&#39;offset&#39;</span> =&gt; 0,
<a name="l00090"></a>00090             <span class="stringliteral">&#39;limit&#39;</span> =&gt; 10,
<a name="l00091"></a>00091         );
<a name="l00092"></a>00092         $array = $parser-&gt;asArray($filename,<span class="stringliteral">&#39;xml&#39;</span>, $args);
<a name="l00093"></a>00093         $this-&gt;assertEquals($args[<span class="stringliteral">&#39;limit&#39;</span>], count($array[<span class="stringliteral">&#39;rss&#39;</span>][<span class="stringliteral">&#39;@children&#39;</span>][<span class="stringliteral">&#39;channel&#39;</span>][<span class="stringliteral">&#39;@children&#39;</span>][<span class="stringliteral">&#39;item&#39;</span>]));
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 
<a name="l00096"></a>00096     }
<a name="l00097"></a>00097 
<a name="l00098"></a>00098     <span class="keyword">public</span> function testJson(){
<a name="l00099"></a>00099         $parser = DataParser::summon();
<a name="l00100"></a>00100 
<a name="l00101"></a>00101         $filename = dirname(__FILE__).<span class="stringliteral">&#39;/test1.json&#39;</span>;
<a name="l00102"></a>00102         $array = $parser-&gt;asArray($filename);
<a name="l00103"></a>00103         $this-&gt;assertEquals(array(<span class="charliteral">&#39;a&#39;</span>=&gt;<span class="charliteral">&#39;A&#39;</span>,<span class="charliteral">&#39;b&#39;</span>=&gt;<span class="charliteral">&#39;B&#39;</span>), $array);
<a name="l00104"></a>00104         $json = $parser-&gt;asJson($array);
<a name="l00105"></a>00105         $this-&gt;assertEquals(<span class="stringliteral">&#39;{&quot;a&quot;:&quot;A&quot;,&quot;b&quot;:&quot;B&quot;}&#39;</span>, str_replace(array(<span class="charliteral">&#39; &#39;</span>,<span class="stringliteral">&quot;\n&quot;</span>),array(<span class="stringliteral">&#39;&#39;</span>,<span class="stringliteral">&#39;&#39;</span>),$json));
<a name="l00106"></a>00106     }
<a name="l00107"></a>00107 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>DataParserTest.php</b>      </li>
      <li class="footer">Generated on Fri Mar 4 2011 23:20:13 for utopia3 by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </li>
    </ul>
  </div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Data Structures</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Functions</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>


</body>
</html>
